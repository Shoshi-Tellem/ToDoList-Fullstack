{"ast":null,"code":"// import axios from 'axios';\n// const apiUrl = \"http://localhost:5215\"\n// export default {\n//   getTasks: async () => {\n//     console.log('getTasks')\n//     const result = await axios.get(`${apiUrl}/items`)\n//     return result.data;\n//   },\n//   addTask: async (name) => {\n//     console.log('addTask', name)\n//     const result = await axios.post(`${apiUrl}/items`, { name });\n//     return result.data;\n//   },\n//   setCompleted: async (id, isComplete) => {\n//     console.log('setCompleted', { id, isComplete })\n//     const result = await axios.put(`${apiUrl}/items/${id}`, { isComplete });\n//     return result.data;\n//   },\n//   deleteTask: async (id) => {\n//     console.log('deleteTask', id)\n//     const result = await axios.delete(`${apiUrl}/items/${id}`);\n//     return result.data;\n//   }\n// };\nimport axios from'axios';// הגדרת כתובת ה-API כ-default\nconst apiUrl=\"http://localhost:5215\";const apiClient=axios.create({baseURL:apiUrl});// הוספת interceptor לתפיסת שגיאות\napiClient.interceptors.response.use(response=>{// אם התגובה מצליחה, מחזירים את התגובה\nreturn response;},error=>{// כאן תופסים את השגיאות\nconsole.error('Error response:',error.response);// ניתן להוסיף לוגיקה נוספת כמו רישום ללוגים או התראות\nreturn Promise.reject(error);// מחזירים את השגיאה הלאה\n});export default{getTasks:async()=>{console.log('getTasks');const result=await apiClient.get('/items');// השתמש ב-client המוגדר\nreturn result.data;},addTask:async name=>{console.log('addTask',name);const result=await apiClient.post('/items',{name});// השתמש ב-client המוגדר\nreturn result.data;},setCompleted:async(id,isComplete)=>{console.log('setCompleted',{id,isComplete});const result=await apiClient.put(\"/items/\".concat(id),{isComplete});// השתמש ב-client המוגדר\nreturn result.data;},deleteTask:async id=>{console.log('deleteTask',id);const result=await apiClient.delete(\"/items/\".concat(id));// השתמש ב-client המוגדר\nreturn result.data;}};","map":{"version":3,"names":["axios","apiUrl","apiClient","create","baseURL","interceptors","response","use","error","console","Promise","reject","getTasks","log","result","get","data","addTask","name","post","setCompleted","id","isComplete","put","concat","deleteTask","delete"],"sources":["C:/Users/User/Desktop/ש.ב/dot .NET core/פרקטיקוד/ToDo List/ToDoListReact - client/src/service.js"],"sourcesContent":["// import axios from 'axios';\n\n// const apiUrl = \"http://localhost:5215\"\n\n// export default {\n//   getTasks: async () => {\n//     console.log('getTasks')\n//     const result = await axios.get(`${apiUrl}/items`)\n//     return result.data;\n//   },\n\n//   addTask: async (name) => {\n//     console.log('addTask', name)\n//     const result = await axios.post(`${apiUrl}/items`, { name });\n//     return result.data;\n//   },\n\n//   setCompleted: async (id, isComplete) => {\n//     console.log('setCompleted', { id, isComplete })\n//     const result = await axios.put(`${apiUrl}/items/${id}`, { isComplete });\n//     return result.data;\n//   },\n\n//   deleteTask: async (id) => {\n//     console.log('deleteTask', id)\n//     const result = await axios.delete(`${apiUrl}/items/${id}`);\n//     return result.data;\n//   }\n// };\nimport axios from 'axios';\n\n// הגדרת כתובת ה-API כ-default\nconst apiUrl = \"http://localhost:5215\";\nconst apiClient = axios.create({\n    baseURL: apiUrl,\n});\n\n// הוספת interceptor לתפיסת שגיאות\napiClient.interceptors.response.use(\n    response => {\n        // אם התגובה מצליחה, מחזירים את התגובה\n        return response;\n    },\n    error => {\n        // כאן תופסים את השגיאות\n        console.error('Error response:', error.response);\n        // ניתן להוסיף לוגיקה נוספת כמו רישום ללוגים או התראות\n        return Promise.reject(error); // מחזירים את השגיאה הלאה\n    }\n);\n\nexport default {\n  getTasks: async () => {\n    console.log('getTasks');\n    const result = await apiClient.get('/items'); // השתמש ב-client המוגדר\n    return result.data;\n  },\n\n  addTask: async (name) => {\n    console.log('addTask', name);\n    const result = await apiClient.post('/items', { name }); // השתמש ב-client המוגדר\n    return result.data;\n  },\n\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n    const result = await apiClient.put(`/items/${id}`, { isComplete }); // השתמש ב-client המוגדר\n    return result.data;\n  },\n\n  deleteTask: async (id) => {\n    console.log('deleteTask', id);\n    const result = await apiClient.delete(`/items/${id}`); // השתמש ב-client המוגדר\n    return result.data;\n  }\n};\n"],"mappings":"AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,MAAM,CAAG,uBAAuB,CACtC,KAAM,CAAAC,SAAS,CAAGF,KAAK,CAACG,MAAM,CAAC,CAC3BC,OAAO,CAAEH,MACb,CAAC,CAAC,CAEF;AACAC,SAAS,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC/BD,QAAQ,EAAI,CACR;AACA,MAAO,CAAAA,QAAQ,CACnB,CAAC,CACDE,KAAK,EAAI,CACL;AACAC,OAAO,CAACD,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAACF,QAAQ,CAAC,CAChD;AACA,MAAO,CAAAI,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC,CAAE;AAClC,CACJ,CAAC,CAED,cAAe,CACbI,QAAQ,CAAE,KAAAA,CAAA,GAAY,CACpBH,OAAO,CAACI,GAAG,CAAC,UAAU,CAAC,CACvB,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAZ,SAAS,CAACa,GAAG,CAAC,QAAQ,CAAC,CAAE;AAC9C,MAAO,CAAAD,MAAM,CAACE,IAAI,CACpB,CAAC,CAEDC,OAAO,CAAE,KAAO,CAAAC,IAAI,EAAK,CACvBT,OAAO,CAACI,GAAG,CAAC,SAAS,CAAEK,IAAI,CAAC,CAC5B,KAAM,CAAAJ,MAAM,CAAG,KAAM,CAAAZ,SAAS,CAACiB,IAAI,CAAC,QAAQ,CAAE,CAAED,IAAK,CAAC,CAAC,CAAE;AACzD,MAAO,CAAAJ,MAAM,CAACE,IAAI,CACpB,CAAC,CAEDI,YAAY,CAAE,KAAAA,CAAOC,EAAE,CAAEC,UAAU,GAAK,CACtCb,OAAO,CAACI,GAAG,CAAC,cAAc,CAAE,CAAEQ,EAAE,CAAEC,UAAW,CAAC,CAAC,CAC/C,KAAM,CAAAR,MAAM,CAAG,KAAM,CAAAZ,SAAS,CAACqB,GAAG,WAAAC,MAAA,CAAWH,EAAE,EAAI,CAAEC,UAAW,CAAC,CAAC,CAAE;AACpE,MAAO,CAAAR,MAAM,CAACE,IAAI,CACpB,CAAC,CAEDS,UAAU,CAAE,KAAO,CAAAJ,EAAE,EAAK,CACxBZ,OAAO,CAACI,GAAG,CAAC,YAAY,CAAEQ,EAAE,CAAC,CAC7B,KAAM,CAAAP,MAAM,CAAG,KAAM,CAAAZ,SAAS,CAACwB,MAAM,WAAAF,MAAA,CAAWH,EAAE,CAAE,CAAC,CAAE;AACvD,MAAO,CAAAP,MAAM,CAACE,IAAI,CACpB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}